### YAML Template.
#---
#app:
#    name: '@pom.artifactId@'
#    version: '@pom.artifactId@'
#spring:
#    main:
#        allow-bean-definition-overriding: true
#        banner-mode: console
#    profiles:
#        active: docker
#    application:
#        name: '@pom.artifactId@'
#    output:
#        ansi:
#            enabled: DETECT
#    jmx:
#        default-domain: prx-backoffice-rest
#    data:
#        rest:
#            base-path: /api
##<><><><><><><><><><><><><><> BASE DE DATOS <><><><><><><><><><><><><><>
#    datasource:
#        driver-class-name: org.postgresql.Driver
#        url: jdbc:postgresql://${postgres.service.url}:5432/${postgres.service.database}
#        username: ${postgres.service.username}
#        password: ${postgres.service.password}
##<><><><><><><><><><><><><><> LOGGING <><><><><><><><><><><><><><>
#logging:
#    level:
#        root: INFO
#        org:
#            hibernate: DEBUG
##<><><><><><><><><><><><><><> PERSISTENCIA <><><><><><><><><><><><><><>
#    jpa:
#        hibernate.ddl-auto: none
#        show-sql: false
#        database: POSTGRESQL
#        database-platform: org.hibernate.dialect.PostgreSQL9Dialect
#        properties:
#            hibernate:
#                jdbc:
#                    lob.non_contextual_creation: true
#        log-level: error
##<><><><><><><><><><><><><><> POOL DE CONEXIONES A BASE DE DATOS <><><><><><><><><><><><><><>
#    hikari:
#        minimumIdle: 1
#        maximumPoolSize: 1
#        idleTimeout: 15000
#        poolName: SpringBootJPAHikariCPbackbone
#        maxLifetime: 1800000
#        connectionTimeout: 30000
##<><><><><><><><><><><><><><> PARAMETROS PARA BASE DE DATOS <><><><><><><><><><><><><><>
#postgres:
#    service:
#        name: postgres
#        database: pg_core
#        username: usr_genweb
#        password: 1$Pormas
##<><><><><><><><><><><><><><> DESCUBRIDOR DE SERVICIO <><><><><><><><><><><><><><>
#eureka:
#    client:
#        serviceUrl:
#            defaultZone: ${EUREKA_URI:https://${eureka.client.url}/eureka}
#            instance:
#                preferIpAddress: true
#                status-page-url-path: https://${eureka.instance.hostName}/info
#                health-check-url: https://${eureka.instance.hostName}/health
#                home-page-url: https://${eureka.instance.hostName}/
#            healtcheck: true
##<><><><><><><><><><><><><><> SWAGGER <><><><><><><><><><><><><><>
#swagger:
#    base-package: 'com.prx.backoffice.controller'
#    api-info:
#        title: 'PRX Backbone'
#        description: 'Servicios para la gestion de las entidades del sistema'
#        contact:
#            name: 'Luis Antonio Mata'
#            url: 'www.prx.test'
#            email: 'luis.antonio.mata@gmail.com'
##<><><><><><><><><><><><><><> MENSAJES DEL SERVICIO <><><><><><><><><><><><><><>
#messages:
#    user:
#        solicitud-nula-vacia: 'Datos de solicitud vacios o nulos'
#        login-vacio-nulo: 'Alias de usuario vacio o nulo'
#        clave-vacia-nula: 'Clave de usuario vacia o nula'
#        usuario-creado: 'Usuario creado satisfactoriamente'
#        usuario-existe: 'El alias ingresado ya existe'
#        usuario-invalido: 'El alias ingresado no cumple los valores permitidos'
#        clave-no-permitida: 'La clave ingresada no cumple con los valores requeridos'
#        correo-no-valido: 'El correo ingresado no es valido'
#        correo-existe: 'El correo ingresado ya existe'
#        correo-vacio: 'El correo es vacio o nulo'
#        solicitud-exitosa: 'Solicitud realizada con exito'
#        sin-datos: 'No existe datos de usuarios'
#
